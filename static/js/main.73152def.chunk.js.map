{"version":3,"sources":["logo.svg","assets/travelling-alone.jpg","assets/travel-parents.jpg","assets/travel-buddies.jpg","assets/can-accompany.jpg","serviceWorker.js","cards/cardUI.jsx","header/header.jsx","footer/footer.jsx","homepage/homepage.jsx","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","Card","props","react_default","a","createElement","className","windowSize","href","class","src","imgsrc","title","desc","Header","Footer","Homepage","header","cardUI","ImageTravelParents","ImageTravelAlone","travelBuddies","canAccompany","footer","Component","ReactDOM","render","homepage_homepage","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,4DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,4DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yRCYpBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,0GCCSC,SAhBF,SAAAC,GACX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAMK,YACpBJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACbH,EAAAC,EAAAC,cAAA,KAAGG,KAAK,IAAIC,MAAM,iBAChBN,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMS,OAAQL,UAAU,aAClCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BAA0BJ,EAAMU,OAC/CT,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAaJ,EAAMW,YCK7BC,SAbA,SAAAZ,GACb,OACEC,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,KAAGG,KAAK,IAAIF,UAAU,YAAtB,YAGAH,EAAAC,EAAAC,cAAA,KAAGG,KAAK,IAAIF,UAAU,SAAtB,6ECWSS,SAjBA,SAAAb,GACb,OACEC,EAAAC,EAAAC,cAAA,OAAKI,MAAM,UAAX,sBAEEN,EAAAC,EAAAC,cAAA,KAAGG,KAAK,IAAIF,UAAU,0BAAtB,YAGAH,EAAAC,EAAAC,cAAA,KAAGG,KAAK,IAAIF,UAAU,0BAAtB,cAGAH,EAAAC,EAAAC,cAAA,KAAGG,KAAK,IAAIF,UAAU,0BAAtB,oBCoCSU,0LArCX,OACEb,EAAAC,EAAAC,cAAA,gBACEF,EAAAC,EAAAC,cAACY,EAAD,MACAd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iDACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACbH,EAAAC,EAAAC,cAACa,EAAD,CACEX,WAAW,WACXI,OAAQQ,IACRP,MAAM,sCAERT,EAAAC,EAAAC,cAACa,EAAD,CACEX,WAAW,WACXI,OAAQS,IACRR,MAAM,sCAIZT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iDACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACbH,EAAAC,EAAAC,cAACa,EAAD,CACEX,WAAW,WACXI,OAAQU,IACRT,MAAM,0CAERT,EAAAC,EAAAC,cAACa,EAAD,CACEX,WAAW,WACXI,OAAQW,IACRV,MAAM,4BAIZT,EAAAC,EAAAC,cAACkB,EAAD,cAjCeC,cCFvBC,IAASC,OAAOvB,EAAAC,EAAAC,cAACsB,EAAD,MAAcC,SAASC,eAAe,SLyHhD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.73152def.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/travelling-alone.0af99714.jpg\";","module.exports = __webpack_public_path__ + \"static/media/travel-parents.06d06801.jpg\";","module.exports = __webpack_public_path__ + \"static/media/travel-buddies.58dd731b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/can-accompany.2c068fa9.jpg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport \"./card-style.css\";\n\nconst Card = props => {\n  return (\n    <div className={props.windowSize}>\n      <div className=\"card shadow text-center\">\n        <a href=\"#\" class=\"design-less-a\">\n          <img src={props.imgsrc} className=\"card-img\" />\n          <div className=\"card-body card-img-overlay\">\n            <div className=\"card-title text-center\">{props.title}</div>\n            <p className=\"card-text\">{props.desc}</p>\n          </div>\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport \"./header-style.css\";\n\nconst Header = props => {\n  return (\n    <header>\n      <a href=\"#\" className=\"register\">\n        Register\n      </a>\n      <a href=\"#\" className=\"login\">\n        Login\n      </a>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport \"./footer-style.css\";\n\nconst Footer = props => {\n  return (\n    <div class=\"footer\">\n      Copyright Â© XXXX\n      <a href=\"#\" className=\"footer-links-alignment\">\n        About us\n      </a>\n      <a href=\"#\" className=\"footer-links-alignment\">\n        Contact Us\n      </a>\n      <a href=\"#\" className=\"footer-links-alignment\">\n        How it works?\n      </a>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport Card from \"../cards/cardUI\";\nimport Header from \"../header/header\";\nimport ImageTravelAlone from \"../assets/travelling-alone.jpg\";\nimport ImageTravelParents from \"../assets/travel-parents.jpg\";\nimport travelBuddies from \"../assets/travel-buddies.jpg\";\nimport canAccompany from \"../assets/can-accompany.jpg\";\nimport Footer from \"../footer/footer\";\nimport \"./homepage.css\";\n\nclass Homepage extends Component {\n  render() {\n    return (\n      <fragment>\n        <Header />\n        <div className=\"container-fluid d-flex justify-content-center\">\n          <div className=\"row justify-content-center\">\n            <Card\n              windowSize=\"col-md-3\"\n              imgsrc={ImageTravelParents}\n              title=\"Parents travelling? Need company?\"\n            />\n            <Card\n              windowSize=\"col-md-3\"\n              imgsrc={ImageTravelAlone}\n              title=\"Travelling alone? Need company?\"\n            />\n          </div>\n        </div>\n        <div className=\"container-fluid d-flex justify-content-center\">\n          <div className=\"row justify-content-center\">\n            <Card\n              windowSize=\"col-md-3\"\n              imgsrc={travelBuddies}\n              title=\"Want to search & select your company?\"\n            />\n            <Card\n              windowSize=\"col-md-3\"\n              imgsrc={canAccompany}\n              title=\"Like to give company?\"\n            />\n          </div>\n        </div>\n        <Footer />\n      </fragment>\n    );\n  }\n}\n\nexport default Homepage;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport Homepage from \"./homepage/homepage\";\n\nReactDOM.render(<Homepage />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}